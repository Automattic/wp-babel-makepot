#!/usr/bin/env node

'use strict';

/**
 * External dependencies.
 */
const program = require( 'commander' );
const glob = require( 'glob' );
const os = require( 'os' );

/**
 * Internal dependencies.
 */
const makePot = require( '../index' );
const presets = require( '../presets' );
const version = require( '../package.json' ).version;

const presetsKeys = Object.keys( presets );

program
	.version( version )
	.option(
		'-p, --preset <type>',
		`Set babel preset. Available options: ${ presetsKeys.join( ', ' ) }`,
		'react'
	)
	.option( '-i, --ignore <type>', 'Add pattern to exclude matches' )
	.action( ( command, [ files ] ) => {
		if ( ! presetsKeys.includes( program.preset ) ) {
			console.log(
				`Invalid babel preset. Please use any of available options: ${ presetsKeys.join( ', ' ) }`
			);

			return;
		}

		// Replace `~` with actual home directory as glob can't use it.
		const filesGlob = files.replace( /^~/, os.homedir() );
		const ignore = program.ignore && program.ignore.split( ',' );

		glob.sync( filesGlob, { nodir: true, ignore } ).forEach( makePot );
	} )
	.parse( process.argv );
